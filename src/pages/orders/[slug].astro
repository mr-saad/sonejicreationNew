---
import { sheets } from "../shop/new"
import { keys, type keysTypes } from "./index.astro"
import Layout from "../../layout/Layout.astro"
import { Image } from "astro:assets"
const orders = await sheets.spreadsheets.values.get({
  spreadsheetId: import.meta.env.spreadsheetId,
  range: "Orders!A2:I"
})
const order = orders.data.values.filter(all => {
  return all[8] === Astro.params.slug
})
let orderObject: keysTypes = {
  fullName: "",
  email: "",
  phone: "",
  address: "",
  productId: "",
  productTitle: "",
  userId: "",
  productImg: "",
  orderId: ""
}
for (let index = 0; index < keys.length; index++) {
  orderObject[keys[index]] = order[0][index]
}
---

<Layout title={orderObject.productTitle}>
  <section class="container">
    <p style="text-transform: capitalize;">
      Home {Astro.url.pathname.split("/").join(" > ")}
    </p>
    <div class="slug_card flex mt-1 gap2">
      <div class="flex-1">
        <Image
          loading="eager"
          decoding="async"
          width={400}
          height={350}
          alt={orderObject.productTitle}
          src={orderObject.productImg}
          class="radius"
        />
      </div>
      <div class="flex-1">
        <h2 class="capitalize">{orderObject.productTitle}</h2>
        <p>Full Name: {orderObject.fullName}</p>
        <p>Email: {orderObject.email}</p>
        <p>Phone: {orderObject.phone}</p>
        <div class="flex" style="gap: .35rem;">
          <p>Address:</p>
          <p>{orderObject.address}</p>
        </div>
        <p>Order ID: {orderObject.orderId}</p>
        <input type="hidden" id="orderId" value={orderObject.orderId} />
        <button id="cancelBtn" type="button" style="margin-top: 1rem;"
          >Cancel Now</button
        >
      </div>
    </div>
  </section>
</Layout>

<style>
  .slug_card img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }
  @media (max-width: 786px) {
    .slug_card {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>

<script>
  const cancelBtn = document.getElementById("cancelBtn") as HTMLButtonElement,
    orderId = document.getElementById("orderId") as HTMLInputElement
  cancelBtn.addEventListener("click", async e => {
    cancelBtn.disabled = true
    const confirmCancel = confirm("Your Order Will Be Canceled, Sure?")
    if (confirmCancel) {
      try {
        const res = await fetch("/api/cancelOrder", {
          method: "post",
          headers: {
            "content-type": "application/json"
          },
          body: JSON.stringify({ orderId: orderId.value })
        })
        res.status === 200 && location.replace("/orders")
      } catch (error) {
        alert(error.message)
      }
    }
    cancelBtn.disabled = false
  })
</script>
